# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-09 21:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(help_text='Nome da rua/avenida/viela', max_length=200, verbose_name='Rua/avenida/viela/praça')),
                ('number', models.CharField(help_text='Número da casa/prédio', max_length=7, verbose_name='Número')),
                ('cep', models.CharField(blank=True, help_text='Informe apenas se o CEP for por endereço(CEP da casa ou prédio)', max_length=20, null=True, verbose_name='CEP')),
                ('complement', models.CharField(blank=True, help_text='\n            Informações adicionais sobre o endereço, exemplo:\n            Próximo aos correios\n        ', max_length=100, null=True, verbose_name='Complemento')),
            ],
            options={
                'verbose_name_plural': 'Endereços',
                'verbose_name': 'Endereço',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Informe o nome da cidade', max_length=100, verbose_name='Nome')),
                ('cep', models.CharField(blank=True, help_text='Informe apenas se o CEP for por cidade', max_length=20, null=True, verbose_name='CEP')),
            ],
            options={
                'verbose_name_plural': 'Cidades',
                'verbose_name': 'Cidade',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Informe o nome deste país', max_length=150, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name_plural': 'Países',
                'verbose_name': 'País',
            },
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome do bairro', max_length=100, verbose_name='Nome')),
                ('cep', models.CharField(blank=True, help_text='Informe apenas se o CEP for por bairro', max_length=20, null=True, verbose_name='Nome')),
                ('city', models.ForeignKey(help_text='Selecione ou cadastre a cidade deste bairro', on_delete=django.db.models.deletion.CASCADE, to='adresses.City', verbose_name='Cidade')),
            ],
            options={
                'verbose_name_plural': 'Bairros',
                'verbose_name': 'Bairro',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Informe o nome da região', max_length=100, verbose_name='Nome')),
            ],
            options={
                'verbose_name_plural': 'Regiões',
                'verbose_name': 'Região',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Informe o nome do estado', max_length=100, verbose_name='Nome')),
                ('abbreviation', models.CharField(help_text='Sigla do estado ou província', max_length=2, verbose_name='Sigla do estado ou província')),
                ('country', models.ForeignKey(help_text='Selecione ou cadastre o País deste estado', on_delete=django.db.models.deletion.CASCADE, to='adresses.Country', verbose_name='País')),
                ('region', models.ForeignKey(help_text='Selecione ou cadastre a região do país esta este estado', on_delete=django.db.models.deletion.CASCADE, to='adresses.Region', verbose_name='Região')),
            ],
            options={
                'verbose_name_plural': 'Estados',
                'verbose_name': 'Estado',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(help_text='Selecione ou cadastre o estado/província desta cidade', on_delete=django.db.models.deletion.CASCADE, to='adresses.State', verbose_name='Estado'),
        ),
        migrations.AddField(
            model_name='address',
            name='neighborhood',
            field=models.ForeignKey(help_text='Selecione ou cadastre um novo bairro', on_delete=django.db.models.deletion.CASCADE, to='adresses.Neighborhood', verbose_name='Bairro'),
        ),
    ]
